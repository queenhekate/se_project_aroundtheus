!function(){"use strict";class e{constructor(e,t,s){let{name:i,link:o}=e;this._name=i,this._link=o,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){console.log(this._cardElement),this._likeButton.addEventListener("click",(()=>{console.log("this"),this._handleLikeIcon()})),this._trashButton.addEventListener("click",(()=>{console.log("this"),this._handleDeleteCard()})),this._cardImgElement.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button-active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return console.log(this._cardSelector),this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImgElement=this._cardElement.querySelector(".card__image"),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._cardImgElement.src=this._link,this._cardImgElement.alt=this._name,this._cardTitleElement.textContent=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._trashButton=this._cardElement.querySelector(".card__image-button"),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._buttonElement=t.querySelector(this._submitButtonSelector),this._inputList=Array.from(t.querySelectorAll(this._inputSelector))}disableButton(){this._buttonElement.setAttribute("disabled","disabled"),this._buttonElement.classList.add(this._inactiveButtonClass)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}resetValidation(){this.toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableButton():(this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e,this._inputSelector);this._hideInputError(e,this._inputSelector)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitBtn=this._form.querySelector(this._submitButtonSelector),this.toggleButtonState(),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}reset(){this._form.reset()}}const s={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},i=document.forms["profile-form"],o=document.forms["add-card-form"],r=(document.querySelector("#profile-edit-modal"),document.querySelector("#card-add-modal"),document.querySelectorAll(".modal__close"),document.querySelector("#profile-edit-button")),n=document.querySelector("#card-add-button"),l=document.querySelector("#profile-input-title"),a=document.querySelector("#profile-input-description");document.querySelector("#card-input-title"),document.querySelector("#card-input-url");class c{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupCloseButton=this._popupElement.querySelector(".modal__close"),this._popupCloseButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target===e.currentTarget&&this.close()}))}}class u extends c{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__form-input"),this._handleFormSubmit=s}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}))}}const d=new class{constructor(e,t){let{items:s,renderer:i}=e;this._data=s,this._renderer=i,this._containerSelector=t,this._container=document.querySelector(t)}renderItems(){this._data.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Balsam Township",link:"https://www.compass.com/m/f6d367cc15ca0025f0d4911cccdd6befe350606b_img_0_4db8e/640x480.jpg"},{name:"Split Rock Lighthouse",link:"https://www.greatlakescruises.com/uploads/1/0/6/4/106440933/duluth-split-rock-lighthouse-3_orig.jpg"},{name:"Mississippi River",link:"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Efmo_View_from_Fire_Point.jpg/640px-Efmo_View_from_Fire_Point.jpg"},{name:"Voyageurs National Park",link:"https://www.planetware.com/wpimages/2019/12/minnesota-in-pictures-beautiful-places-to-photograph-voyageurs-national-park.jpg"},{name:"Minnehaha Falls",link:"https://www.planetware.com/wpimages/2019/12/minnesota-in-pictures-beautiful-places-to-photograph-minnehaha-falls.jpg"},{name:"Boundary Waters Canoe Area Wilderness",link:"https://www.minnpost.com/wp-content/uploads/2022/03/SouthTemperanceLake940.jpg"}],renderer:e=>{const t=p(e);d.addItem(t)}},".cards__list");function p(t){return console.log(t),new e(t,"#card-template",m).getView()}d.renderItems();const _=new class{constructor(e){let{profileNameSelector:t,profileDescriptionSelector:s}=e;this._profileName=document.querySelector(t),this._profileDescription=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,description:this._profileDescription.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileDescription.textContent=t}}({profileNameSelector:".profile__title",profileDescriptionSelector:".profile__description"}),h=new class extends c{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImage=document.querySelector(".card__image_preview"),this._previewDescription=document.querySelector(".modal__caption")}open(e){let{link:t,name:s}=e;this._previewImage.setAttribute("src",t),this._previewImage.setAttribute("alt",s),this._previewDescription.textContent=s,super.open()}}({popupSelector:"#modal_type-preview"});function m(e,t){h.open(e,t),console.log("hello, world")}h.setEventListeners();const S=new t(s,i);S.enableValidation();const E=new t(s,o);E.enableValidation();const f=new u({popupSelector:"#profile-edit-modal",handleFormSubmit:e=>{console.log(e),_.setUserInfo(e.title,e.description),f.close()}});f.setEventListeners();const g=new u({popupSelector:"#card-add-modal",handleFormSubmit:e=>{!function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"addItem";const s=p(e);d[t](s)}({name:e.name,link:e.link}),g.close()}});g.setEventListeners(),n.addEventListener("click",(()=>{g.open(),E.toggleButtonState(),console.log("hello, world")})),r.addEventListener("click",(()=>{const e=_.getUserInfo();l.value=e.name,a.value=e.description,S.resetValidation(),f.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,